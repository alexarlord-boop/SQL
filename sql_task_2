

/****** ******/
Задача 1 (Зачтено)
Задача 2 (Зачтено)


Задача 3
Ответ:
	В запросе используется функция DATEPART. 
	Эта функция возвращает целое число, представляющее указанную часть datepart заданного типа date. 
	Чтобы найти строки, подходящие под условие WHERE, необходимо просканировать кластерный индекс и вычислить значение этой функции. 
	Индекс по дате не даст преимущества.
	
	Что сделать: задать границы для даты в условии: DateOfBirth >= '1998-01-01' AND DateOfBirth < '1999-01-01'.
		     Добавить это в условие отфильтрованного индекса.
		     Итого:
			CREATE INDEX idx_Employees_DateOfBirth ON Employees(DateOfBirth)
			WHERE DateOfBirth >= '1998-01-01' AND DateOfBirth < '1999-01-01';

			SELECT COUNT(*)
			FROM Employees
			WHERE DateOfBirth >= '1998-01-01' AND DateOfBirth < '1999-01-01';



Задача 4
Ответ:
	Повысит скорость исполнения, все поля запроса содержатся в индексе.
	
	Что сделать: добавить условие LastName =N'Иванов' в отфильтрованный индекс, добавить модификатор сортировки DESC в индекс после поля DateOfBirth.
		     Итого:
			CREATEINDEX idx_Employees_LastName_DateOfBirth ON Employees(LastName, DateOfBirth DESC)
			WHERE LastName =N'Иванов';
			
			SELECT TOP 1 *
			FROM Employees
			WHERE LastName =N'Иванов'
			ORDERBY DateOfBirth DESC
	


Задача 5
Ответ:
	Некорректный индекс, не даст преимущества, так как не будет использоваться. Включает ненужное поле на обслуживание.
	
	Что сделать: убрать поле LastName из индекса. Сделать отфильтрованный  индекс с условием DateOfBirth >'2000-01-01'. 
		    Итого:
			CREATE INDEX idx_Employees_DateOfBirth ON Employees(DateOfBirth)
			WHERE DateOfBirth >'2000-01-01';
			
			SELECT *
			FROM Employees
			WHERE DateOfBirth >'2000-01-01'


Задача 6 (Зачтено)
